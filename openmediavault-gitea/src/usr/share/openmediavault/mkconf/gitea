#!/bin/bash
set -euo pipefail

ACTION="${1:-}"
STACK_DIR="/srv/dev-disk-by-label-data/gitea"
COMPOSE_FILE="${STACK_DIR}/docker-compose.yml"
ENV_FILE="${STACK_DIR}/.env"

error() {
    echo "[gitea] $1" >&2
}

ensure_requirements() {
    if ! command -v docker >/dev/null 2>&1; then
        error "Docker is required but not installed."
        exit 1
    fi
    if ! docker compose version >/dev/null 2>&1; then
        error "The Docker Compose plugin is required but not installed."
        exit 1
    fi
}

write_env_file() {
    cat >"${ENV_FILE}" <<EOT
GITEA_VERSION=1.22-rootless
POSTGRES_USER=gitea
POSTGRES_PASSWORD=gitea
POSTGRES_DB=gitea
SSH_PORT=2222
HTTP_PORT=3080
TZ=UTC
EOT
}

write_compose_file() {
    cat >"${COMPOSE_FILE}" <<'EOT'
services:
  gitea-server:
    image: gitea/gitea:${GITEA_VERSION}
    restart: unless-stopped
    depends_on:
      - gitea-db
    environment:
      USER_UID: 1000
      USER_GID: 1000
      GITEA__database__DB_TYPE: postgres
      GITEA__database__HOST: gitea-db:5432
      GITEA__database__NAME: ${POSTGRES_DB}
      GITEA__database__USER: ${POSTGRES_USER}
      GITEA__database__PASSWD: ${POSTGRES_PASSWORD}
      GITEA__security__INTERNAL_TOKEN: changeme
      GITEA__server__ROOT_URL: http://localhost:${HTTP_PORT}/
      TZ: ${TZ}
    ports:
      - "${HTTP_PORT}:3000"
      - "${SSH_PORT}:2222"
    volumes:
      - ./data:/var/lib/gitea
      - ./config:/etc/gitea

  gitea-db:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${TZ}
    volumes:
      - ./postgres:/var/lib/postgresql/data

networks:
  default:
    name: gitea
EOT
}

docker_compose() {
    docker compose -f "${COMPOSE_FILE}" --env-file "${ENV_FILE}" "$@"
}

install() {
    ensure_requirements
    mkdir -p "${STACK_DIR}"
    write_env_file
    write_compose_file
    docker_compose pull
    docker_compose up -d
}

remove() {
    if [[ -f "${COMPOSE_FILE}" ]]; then
        docker_compose down --remove-orphans || true
    fi
    rm -rf "${STACK_DIR}"
}

case "${ACTION}" in
    install)
        install
        ;;
    remove)
        remove
        ;;
    *)
        echo "Usage: $0 {install|remove}" >&2
        exit 1
        ;;
esac
