---
name: Auto Format

'on':
    workflow_dispatch:
        inputs:
            commit_message:
                description: 'Commit message for formatting changes'
                required: false
                default: 'Auto-format code with linters and formatters'

jobs:
    format:
        name: Format Code
        runs-on: ubuntu-latest
        permissions:
            contents: write
        steps:
            - uses: actions/checkout@v4
              with:
                  token: ${{ secrets.GITHUB_TOKEN }}

            - name: Set up Python
              uses: actions/setup-python@v4
              with:
                  python-version: '3.8'

            - name: Set up Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '18'

            - name: Install formatting tools
              run: |
                  python -m pip install --upgrade pip
                  pip install black isort
                  npm install -g prettier

            - name: Format Python files
              run: |
                  black scripts/ openmediavault-*/src/usr/share/openmediavault/engined/rpc/ || true
                  isort scripts/ openmediavault-*/src/usr/share/openmediavault/engined/rpc/ || true

            - name: Format JavaScript files
              run: |
                  find . -name "*.js" -path "*/openmediavault-*" -exec prettier --write {} + || true

            - name: Format YAML files
              run: |
                  find . -name "*.yml" -o -name "*.yaml" | xargs prettier --write || true

            - name: Check for changes
              id: verify-changed-files
              run: |
                  if [ -n "$(git status --porcelain)" ]; then
                    echo "changed=true" >> $GITHUB_OUTPUT
                  else
                    echo "changed=false" >> $GITHUB_OUTPUT
                  fi

            - name: Commit changes
              if: steps.verify-changed-files.outputs.changed == 'true'
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add .
                  git commit -m "${{ github.event.inputs.commit_message }}"
                  git push
